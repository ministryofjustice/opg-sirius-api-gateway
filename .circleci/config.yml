version: 2.1

workflows:
  path_to_live:
    jobs:
      - sirius-api-gateway/package_lpas_collection_lambda:
          name: package_lpas_collection_lambda
      - sirius-api-gateway/build_gem_cache:
          name: build_gem_cache
      - sirius-api-gateway/lint_terraform:
          name: lint_terraform
          requires: [package_lpas_collection_lambda]
      - sirius-api-gateway/build_api_test_file:
          name: build_api_test_file
          requires: [build_gem_cache]
      - sirius-api-gateway/apply_terraform:
          filters:
            branches:
              ignore: [master]
          name: apply_development
          workspace: development
          requires:
            [lint_terraform, build_gem_cache, package_lpas_collection_lambda]
      - sirius-api-gateway/newman_api_test:
          filters:
            branches:
              ignore: [master]
          name: test_lpas_collection_endpoint_development
          workspace: development
          requires: [build_api_test_file, apply_development]
      - sirius-api-gateway/apply_terraform:
          filters:
            branches:
              only: [master]
          name: apply_production
          workspace: production
          requires: [lint_terraform, build_gem_cache]
      - sirius-api-gateway/newman_api_test:
          filters:
            branches:
              only: [master]
          name: test_lpas_collection_endpoint_production
          workspace: production
          requires: [build_api_test_file, apply_production]
orbs:
  sirius-api-gateway:
    executors:
      ruby:
        docker: [image: circleci/ruby:latest-browsers]
      terraform:
        docker: [image: hashicorp/terraform]
      python:
        docker: [image: python:alpine]
      newman:
        docker: [image: postman/newman:alpine]
    commands:
      install_terraform:
        steps:
          - run:
              name: install_terraform
              command: |
                export TERRAFORM_VERSION=0.11.11
                export TERRAFORM_SHA256SUM=94504f4a67bad612b5c8e3a4b7ce6ca2772b3c1559630dfd71e9c519e3d6149c
                curl https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip > terraform_${TERRAFORM_VERSION}_linux_amd64.zip
                echo "${TERRAFORM_SHA256SUM}  terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > terraform_${TERRAFORM_VERSION}_SHA256SUMS
                sha256sum -c --status terraform_${TERRAFORM_VERSION}_SHA256SUMS
                sudo unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin
                rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      relocate_lambda_packages:
        steps:
          - run:
              name: relocate_lambda_packages
              command: |
                mv /tmp/*.zip ~/project/lambdas/
    jobs:
      lint_terraform:
        executor: terraform
        environment:
          TF_WORKSPACE: "development"
        steps:
          - checkout
          - restore_cache:
              keys:
                - lpas_collection_lambda-{{ .Branch }}
          - relocate_lambda_packages
          - run:
              name: Init Terraform
              command: |
                terraform init
          - run:
              name: Lint Terraform
              command: |
                terraform validate
      build_gem_cache:
        executor: ruby
        steps:
          - checkout
          - restore_cache:
              keys:
                ['gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}']
          - run: bundle install --path vendor/bundle --quiet
          - save_cache:
              key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}
              paths: [vendor/bundle]
      apply_terraform:
        parameters:
          workspace:
            description: Terraform Workspace name
            type: string
            default: development
        environment:
          TF_WORKSPACE: "<< parameters.workspace >>"
        executor: ruby
        steps:
          - checkout
          - install_terraform
          - restore_cache:
              keys:
                - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}
          - restore_cache:
              keys:
                - lpas_collection_lambda-{{ .Branch }}-{{ .Revision }}
          - relocate_lambda_packages
          - run: bundle install --path vendor/bundle --quiet
          - run: bundle exec rake terraform:apply
      package_lpas_collection_lambda:
        executor: python
        steps:
          - checkout
          - run: apk add zip
          - run: pip3 install -r lambdas/requirements.txt  --target ./lambdas/vendor
          - run: cd ./lambdas; zip -r9 /tmp/lpas_collection_lambda.zip .
          - save_cache:
              key: lpas_collection_lambda-{{ .Branch }}-{{ .Revision }}
              paths:
                - /tmp/lpas_collection_lambda.zip
      build_api_test_file:
        executor: ruby
        steps:
          - checkout
          - restore_cache:
              keys:
                ['gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}']
          - run: bundle install --path vendor/bundle --quiet
          - run: bundle exec rake lambda:buildapitestfile
          - save_cache:
              key: api_test_config-{{ .Branch }}-{{ .Revision }}
              paths: /tmp/generated.postman_environment.json
      newman_api_test:
        parameters:
          workspace:
            description: Terraform Workspace name
            type: string
            default: development
        environment:
          TF_WORKSPACE: "<< parameters.workspace >>"
        executor: newman
        steps:
          - checkout
          - run: apk add ca-certificates -q
          - restore_cache:
              keys:
                - api_test_config-{{ .Branch }}-{{ .Revision }}
          - run: newman run https://www.getpostman.com/collections/c85538a8e4fb4f19b892 -e /tmp/generated.postman_environment.json
